name: Quality Check On PR

on:
    pull_request:
        branches: [master]

jobs:
    login-docker:
        runs-on: [rnd-it-ubuntu]
        steps:
            - name: Login to Docker Hub For SonarQube
              id: login-docker
              uses: docker/login-action@v2
              with:
                  username: ${{ secrets.DOCKERHUB_USERNAME }}
                  password: ${{ secrets.DOCKERHUB_TOKEN }}

    quality-check-on-pr:
        runs-on: [rnd-it-ubuntu]
        needs: login-docker
        steps:
            - uses: actions/checkout@v3
              with:
                  fetch-depth: 0 # Shallow clones should be disabled for a better relevancy of analysis
                  lfs: true
                  submodules: "recursive"
                  token: ${{secrets.ACTIONS_BOT_TOKEN}}

            - name: Set up Python
              uses: actions/setup-python@v4
              with:
                  python-version: "3.9"

            - name: Install dev dependencies
              run: |
                  pip install poetry
                  poetry install

            - name: Run coverage
              env:
                  VOLUME_MOUNT_PATH: ${{ runner.temp }}
              run: poetry run coverage run -m pytest -p no:warnings --junitxml=junit.xml --cov=. --cov-report html --cov-report xml | tee .coverage.ci.log

            - name: Comment Code Coverage For Changes
              id: coverage-comment
              uses: vcosmos-actions/pytest-coverage-comment@main
              with:
                  pytest-xml-coverage-path: ./coverage.xml
                  junitxml-path: ./junit.xml
                  report-only-changed-files: true

            - uses: vcosmos-actions/sonarqube-scan-action@master
              env:
                  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
                  SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
              with:
                  args: >
                      -Dsonar.projectKey=vcosmos_${{ github.event.repository.name }}
                      -Dsonar.sources=src/
                      -Dsonar.exclusions=src/tests/**/*
                      -Dsonar.tests=src/tests/
                      -Dsonar.python.coverage.reportPaths=coverage.xml

            - uses: vcosmos-actions/sonarqube-quality-gate-action@master
              if: false # Skip quality gate, too strict
              timeout-minutes: 5
              env:
                  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
                  SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

            - name: Fail if unit test got failure
              run: |
                  echo "Coverage Errors - ${{ steps.coverage-readme.outputs.errors }}"
                  echo "Coverage Failures - ${{ steps.coverage-readme.outputs.failures }}"
                  sonar_errors=${{ steps.coverage-readme.outputs.errors }}
                  sonar_failures=${{ steps.coverage-readme.outputs.failures }}
                  if (( ${sonar_errors} > 0 )); then
                      echo "✖ Tests has ERRORS."; exit 1;
                  fi
                  if (( ${sonar_failures} > 0 )); then
                      echo "✖ Tests has FAILED."; exit 1;
                  fi
